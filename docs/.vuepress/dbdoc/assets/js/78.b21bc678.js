(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{434:function(_,v,t){"use strict";t.r(v);var e=t(42),r=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"clickhouse"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clickhouse"}},[_._v("#")]),_._v(" "),t("strong",[_._v("Clickhouse")])]),_._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[_._v("#")]),_._v(" "),t("strong",[_._v("概述")])]),_._v(" "),t("p",[_._v("Clickhouse是开源列式数据库，用于联机分析处理（OLAP）的列式数据库管理系统（columnar DBMS），专为在线数据分析而设计，官方提供的文档表名，ClickHouse 日处理记录数”十亿级”。")]),_._v(" "),t("h2",{attrs:{id:"架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[_._v("#")]),_._v(" "),t("strong",[_._v("架构")])]),_._v(" "),t("p",[_._v("ClickHouse采用Multi-Master多主架构，集群中的每个节点角色对等，客户端访问任意一个节点都能得到相同的效果。这种多主的架构有许多优势，例如对等的角色使系统架构变得更加简单，不用再区分主控节点、数据节点和计算节点，集群中的所有节点功能相同。所以它天然规避了单点故障的问题，非常适合用于多数据中心、异地多活的场景。")]),_._v(" "),t("p",[_._v("目前ClickHouse公开的资料相对匮乏，比如在架构设计层面就很难找到完整的资料，甚至连一张整体的架构图都没有。下图为 ClickHouse架构设计中的核心模块")]),_._v(" "),t("p",[t("img",{attrs:{src:"/images/dashuju/Aspose.Words.390a89bc-6b49-496d-b349-93be6392fec4.010.png",alt:""}})]),_._v(" "),t("h2",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[_._v("#")]),_._v(" "),t("strong",[_._v("特点")])]),_._v(" "),t("p",[_._v("1、列式存储")]),_._v(" "),t("p",[_._v("2、数据高效压缩")]),_._v(" "),t("p",[_._v("3、基于磁盘存储")]),_._v(" "),t("p",[_._v("4、数据有序存储：支持在建表时，指定将数据按照某些列进行sort by")]),_._v(" "),t("p",[_._v("5、主键索引")]),_._v(" "),t("p",[_._v("6、稀疏索引")]),_._v(" "),t("p",[_._v("7、数据Sharding")]),_._v(" "),t("p",[_._v("8、数据partitioning：partition by")]),_._v(" "),t("p",[_._v("9、数据TTL")]),_._v(" "),t("p",[_._v("10、高吞吐写入能力")]),_._v(" "),t("p",[_._v("11、主备同步")]),_._v(" "),t("p",[_._v("12、多核并行")]),_._v(" "),t("p",[_._v("13、分布式计算")]),_._v(" "),t("p",[_._v("14、向量化执行与SIMD")]),_._v(" "),t("p",[_._v("15、动态代码生成Runtime Codegen")]),_._v(" "),t("p",[_._v("16、复杂数据类型支持")]),_._v(" "),t("h2",{attrs:{id:"优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[_._v("#")]),_._v(" "),t("strong",[_._v("优缺点")])]),_._v(" "),t("h2",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[_._v("#")]),_._v(" "),t("strong",[_._v("优点")])]),_._v(" "),t("p",[_._v("1 多个服务器上的分布式处理：分布式查询：从分布式表查询-> 重写 ->负载均衡,发送给远程节点查询->接收结果、合并")]),_._v(" "),t("p",[_._v("2 非常快速的扫描，可用于实时查询")]),_._v(" "),t("p",[_._v("3 列存储非常适合使用“宽”/“非规范化”表（许多列）：计算类查询时，大大减少IO消耗")]),_._v(" "),t("p",[_._v("4 压缩性好：相对mysql压缩10倍")]),_._v(" "),t("p",[_._v("5 SQL支持（有限制）")]),_._v(" "),t("p",[_._v("6 良好的功能集，包括支持近似计算")]),_._v(" "),t("p",[_._v("7 不同的表引擎：MergeTree，ReplicatedMergeTree，Distributed等")]),_._v(" "),t("p",[_._v("8 非常适合结构日志/事件数据以及时间序列数据（引擎MergeTree需要日期字段）")]),_._v(" "),t("p",[_._v("9 索引支持（仅限主键，不是所有存储引擎）")]),_._v(" "),t("p",[_._v("10 漂亮的命令行界面，具有用户友好的进度条和格式")]),_._v(" "),t("h2",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[_._v("#")]),_._v(" "),t("strong",[_._v("缺点")])]),_._v(" "),t("p",[_._v("1 没有真正的删除/更新支持，也没有事务（与Spark和大多数大数据系统相同），没有delete/update")]),_._v(" "),t("p",[_._v("2 没有二级密钥（与Spark和大多数大数据系统相同）")]),_._v(" "),t("p",[_._v("3 只支持自己的协议（没有MySQL协议支持）")]),_._v(" "),t("p",[_._v("4 有限的SQL支持，以及连接实现是不同的。如果要从MySQL或Spark迁移，则可能必须使用连接重新编写所有查询。")]),_._v(" "),t("p",[_._v("5 没有"),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Select_(SQL)#Window_function",target:"_blank",rel:"noopener noreferrer"}},[_._v("窗口功能"),t("OutboundLink")],1),_._v("。")])])}),[],!1,null,null,null);v.default=r.exports}}]);